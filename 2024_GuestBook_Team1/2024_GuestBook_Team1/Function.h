#pragma once

#include <thread>
#include "Struct.h"

#include "Resource.h"

#include <gdiplus.h> //gdi+ 기능을 사용하기 위한 헤더파일.
#pragma comment (lib, "gdiplus.lib") // GDI+ 라이브러리 링크
#include <cmath> // sqrt(제곱 근) 사용을 위한 추가
#include <chrono> // 붓 브러쉬 사용을 위한 시간 관련 라이브 러리

using namespace std;



class Function
{

private:


	HWND hWnd;
	HDC hdc;
	HPEN nPen, oPen;
	HBRUSH hPen;

	int px, py;

	int x, y;

	// 붓 브러쉬 변수 
	std::chrono::steady_clock::time_point DrawTime; // 그리기 시작한 시간
	std::chrono::steady_clock::time_point lastThicknessChangeTime;
	const int Min_Thickness = 4;  // 최소 두께
	const int Threshold_Speed = 600; // 속도 임계값 (픽셀/초)
	const int Smoothing_Factor = 2; // 두께 전환 시 부드러움 정도
	const int Update_Interval = 10; // 두께 업데이트 간격 (밀리초)

	int bShape = BRUSH; // 브러쉬 종류 버튼 없어서 해당 코드에다 변수 넣어서 사용.

	bool isLeftClick = false;
	bool isReplay = false;

	LINFO drawLInfo;

	thread replayThreadHandle;


	ULONG_PTR gdiplusToken;

	void replay(HWND);
	void record(PINFO);

public:

	void draw(HWND, PINFO, bool);		//뒤에 브러쉬 추가
	void mouseUD(PINFO, bool);
	void replayThread(HWND);

	void clearDrawing(HWND);

	void setIsReplay(bool);
	bool getIsReplay();

	bool getDrawLInfoEmpty();

	void setBShape(int);

	void setPenStyle(int, PINFO, COLORREF,int); // LPARAM 인수 에서 PINFO 로 바꿈
	void GDIPlusStart(); // gdi+ 시작 함수 
	void GDIPlusEnd(); // gdi+ 종료 함수

	LINFO getDrawLInfo();

};